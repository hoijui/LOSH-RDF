@prefix : <https://www.thingiverse.com/thing%3A22986/1.0.0/> .
@prefix okh: <https://github.com/OPEN-NEXT/OKH-LOSH/raw/master/OKH-LOSH.ttl#> .
@prefix otrl: <http://purl.org/oseg/ontologies/OTRL#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .

:Project a okh:Module ;
    rdfs:label "Useless Dice" ;
    okh:dataSource "thingiverse.com" ;
    okh:documentationLanguage "en" ;
    okh:documentationReadinessLevel otrl:Odrl3 ;
    okh:function """Do you like to play games with dice?  Do you find yourself unannoyed with QR codes?  Then we have the dice for you!  Until you memorize which pattern is which digit, this is guaranteed to require a cameraphone to decode what number you rolled!\r
\r
Please note that this is a proof-of-concept and a work in progress.  OpenSCAD is not properly extruding my QR code line art, which leaves bad QR codes on the faces.\r
\r
* * *\r
\r
I ended up rewriting the whole thing, using a Ruby script to generate the QR code "pixels", then outputting OpenSCAD cube primitives for each "pixel."  This works around the problem with OpenSCAD messing up the vector images.  The updated version is "Useless Dice" to at http://www.thingiverse.com/thing:22997""" ;
    okh:hasImage :Image ;
    okh:licensor "BrianEnigma" ;
    okh:repo <https://www.thingiverse.com/thing:22986> ;
    okh:repoHost "www.thingiverse.com" ;
    okh:spdxLicense <https://spdx.org/licenses/CC-BY-SA-4.0> ;
    okh:technologyReadinessLevel otrl:Otrl4 ;
    okh:uploadMethod "auto" ;
    okh:version "1.0.0" ;
    okh:versionOf <https://www.thingiverse.com/thing:22986> .

:Image a okh:Image ;
    rdfs:label "Image of Useless Dice 1.0.0" ;
    okh:fileFormat "JPG" ;
    okh:fileUrl <https://cdn.thingiverse.com/renders/46/b3/1c/75/6d/useless_dice_display_large_display_large.jpg> ;
    okh:permaURL <https://cdn.thingiverse.com/renders/46/b3/1c/75/6d/useless_dice_display_large_display_large.jpg> .

