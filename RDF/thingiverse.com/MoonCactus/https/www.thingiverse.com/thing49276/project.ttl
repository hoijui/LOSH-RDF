@prefix : <https://www.thingiverse.com/thing%3A49276/1.0.0/> .
@prefix okh: <https://github.com/OPEN-NEXT/OKH-LOSH/raw/master/OKH-LOSH.ttl#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .

:GenerateWoodPatternsWithTemperatureChanges a okh:Module ;
    rdfs:label "Generate wood patterns with temperature changes" ;
    okh:dataSource "thingiverse.com" ;
    okh:documentationLanguage "en" ;
    okh:function """Script to generate texture via temperature gradients to get horizontal stripes that "look like wood".  The last and only updated source code is now on github at https://github.com/MoonCactus/gcode_postprocessors/tree/master/wood\r
\r
This is the code of my post here: http://betterprinter.blogspot.fr/2012/10/shades-of-brown-with-wood-filament-via.html  \r
\r
The owl is Cushwa's popular design at http://www.thingiverse.com/thing:18218  \r
\r
The picture which highlights the effect on a regular polygonal vas comes from mttwinmill (https://www.thingiverse.com/make:657526)\r
\r
---\r
\r
\r
This thing is not an object to print, but a set of instruction that will "patch" your gcode file in place (it will be modified), so keep a backup if you need one.  \r
\r
The gcodeFile is the only compulsory parameter.  Check the source code for more information.\r
\r
Initial temperature settings will be overridden by the varying pattern that is generated by this script (a variant of recursive Perlin noise). You can run it multiple times to test different values and generated temperature curve until you like it.  \r
\r
Default values are minTemp=190, maxTemp=230 and grainSize=3.  Higher temperatures produce darker bands (due to the wood being burnt). Do not let the wood stay too long in your nozzle else you might end up clogging it with carbon (which is quite hard to clean up)!\r
\r
Download the latest python script from https://github.com/MoonCactus/gcode_postprocessors/tree/master/wood\r
\r
This script was designed and works with "Python" (https://www.python.org/downloads/)\r
\r
How to run it on windows (thanks to Nic/@nd1985):\r
\r
- Install python from https://www.python.org/downloads/windows/ or check http://docs.python.org/2/faq/windows.html\r
- Open the windows command prompt. \r
- If you search for cmd, it will pop up.\r
- Drag the python file into the command prompt\r
- Type `-f` and drag in the gcode file you want to modify\r
- Type `-i` and enter the minimum temp you want (e.g. `-i 180`, with a space between the option and the Celcius degree)\r
- idem, use `-a maxtemp` if you want\r
- also `-g grainsize` if you want. I used the default 3.0\r
- Hit enter. The script will process. When finished, the command prompt will reset to the state it was in when you first started. The original gcode you entered has now been modified.\r
\r
**Basic parameters**\r
\r
* `-f` aka `--file `  G-code file to process (with complete path if needed). This is the only required parameter.\r
* `-i` aka `--min `     Minimum allowed temperature (too low and the filament will not extrude!). Default is 180\r
* `-a` aka `--max `     Maximum allowed temperature (too high and the filament will carbonize!). Default is 230\r
\r
**Aesthetics**\r
\r
* `-g` aka `--grain `      Average "width" of the patterns (smaller means faster variations). Default is 3.0\r
* `-z` aka `--z-offset `   Shift the pattern vertically (e.g. if you want it to match some geometrical feature of your design). Default is 0.0\r
* `-r` aka `--random-seed `    Use a completely different pattern\r
* `-s` aka `--spikiness-power `  How "spiky" are the dark bands (sets the imbalance of light/dark bands). With higher values (eg 2 or 3), the dark stripes will be made sparser. You can get the opposite effect with value between 0 and 1 (eg. 0.5 will generate fatter dark bands, convenient for filament that get lighter with temperature). Values below 0.2 or above 3.0 are probably useless.\r
\r
**Advanced options**\r
\r
These are mostly to play nice with a few printer firmwares. Use only when needed!\r
\r
* `-k` aka `--skip-start-z `     Do not change temperatures until provided height (e.g. when you are using a support/raft)\r
* `-t` aka `--first-temp `    Which temperature to start with. Default is to set it.\r
* `-u` aka `--max-upward `    Cap instant temperatures increases (in °C/layer), default is no cap!\r
* `-d` aka `--max-downward `  Cap instant temperatures decreases (in °C/layer)\r
* `-c` aka `--scan-for-z-hop `    Try to detect the "Z-hop" that some slicer do. Default is 5mm, use 0 to disable it.\r
* `-w` aka `--temp-command ` set the temperature g-code command to use (defaut is M104, but you might want M109 that waits for the temperature to settle before moving on, some printers may need this)\r
\r
If you are using a command line interpreter and you have Python installed on your machine, you can run it like this, e.g. to generate temperatures that vary within 205 and 235°C use the following:\r
\r
```\r
python wood.py --min 205 --max 235 --file myfile.gcode\r
```\r
\r
When you want "faster" variations, just change the default 3mm `--grain` and use a smaller value, like\r
```\r
python wood.py --min 205 --max 235 --grain 1.5 --file myfile.gcode\r
```\r
\r
If your printer stops with a "thermal runaway" error, you can tell the script to go slower and wait for temperatures to settle on each change, by using an alternate g-code command, e.g.:\r
```\r
python wood.py -w M109 --file myfile.gcode\r
```\r
(see https://www.simplify3d.com/support/articles/3d-printing-gcode-tutorial/#M104-M109 about the issue)\r
\r
\r
** About Cura and Cura plugins **\r
\r
After multiple requests and at last, I converted the initial Cura plugin to a standalone Python script that no more needs Cura nor Skeinforge. I documented the process here by the way: http://betterprinter.blogspot.fr/2013/02/how-tun-run-python-cura-plugin-without.html  \r
\r
This script was an early but official plugin in Cura (version 12.11+). But Ultimaker broke its own support to the plugins with almost each new release (why?). I hope forthcoming Cura 4 will eventually settle to something that would not require me to fix the script with each new release. Sorry, but there will be no more support for Cura until they make their mind!\r
\r
** Last updates **\r
\r
- 20190307-113457 Clearer documentation\r
\r
- Wed Mar 29 18:53:31 CEST 2017 Moved to github! This is the terminal update that will appear here!\r
- Wed Sep 28 12:41:55 CEST 2016 Instructions cleanup and cosmetic fix to the python script\r
- Fri Jan 10 14:32:52 CET 2014  wood31 Fixed obsolete syntax that made Python3 fail (thanks @Mysli) wood32 is for Python3, should work also on Python2 but untested by me!  \r
- Thu Jan  9 23:10:51 CET 2014  Added some more options, and a Windows-friendly zipped version with windows line ends and zipped so that it does not get corrupted when downloaded or opened (this OS sucks so much that you have to pay for it, and you get a notepad as useful as an ashtray on a motorbike, so ridiculous!)  \r
- Sun Jul  7 21:43:12 UTC 2013 I added a limited web service hosted on https://www.tecrd.com/tools/stl_wood (but it may refuse your file because it is too big, or because the server is busy doing something else)\r
- Tue Feb 12 08:35:53 UTC 2013  more readable ASCII art plot, can be re-run on itself, it will no more duplicate the commands and graph, fixed a bug in the numeric arguments (thanks to Fused3D)""" ;
    okh:hasImage :Image ;
    okh:licensor "MoonCactus" ;
    okh:repo <https://www.thingiverse.com/thing:49276> ;
    okh:repoHost "www.thingiverse.com" ;
    okh:spdxLicense <https://spdx.org/licenses/CC-BY-SA-4.0> ;
    okh:uploadMethod "auto" ;
    okh:version "1.0.0" ;
    okh:versionOf <https://www.thingiverse.com/thing:49276> .

:Image a okh:Image ;
    rdfs:label "Image of Generate wood patterns with temperature changes 1.0.0" ;
    okh:fileFormat "JPG" ;
    okh:fileUrl <https://cdn.thingiverse.com/renders/e9/a8/3e/ab/68/owl_back2_display_large.jpg> ;
    okh:permaURL <https://cdn.thingiverse.com/renders/e9/a8/3e/ab/68/owl_back2_display_large.jpg> .

