documentation-language = "en"
documentation-readiness-level = "ODRL-3"
function = "THE PHOTOS:  Are mostly of the OLD design these STLs are meant to pretty-up, but illustrate how to make one without a 3D printer.\r\n\r\nWHAT IS IT?\r\nA Chording Keyboard is a one-handed (usually) input device, where you type keystrokes by pressing combinations of buttons.  Kind of like playing Guitar Hero.  It's also called a Keyer.  All the commercially available designs are bulky, old, and stupid, but the basic idea of a chording keyboard is a great one for wearable computing.\r\n\r\nhttp://en.wikipedia.org/wiki/Chording_keyboard\r\nhttp://en.wikipedia.org/wiki/Keyer\r\n\r\nI've always wanted to produce this design -- poor guy gave up before everyone on the planet had a 3D printer:  http://www.xaphoon.com/dataegg/\r\n\r\nMY DESIGN:\r\nBut my design is nothing of the sort.  I put this together a while back, before I had a 3D printer, myself.  If you want to go that route, you can... there's no reason to use my STLs, and they're not even complete.  So this is basically a very old project I am resurrecting now that I have more resources; but this version is basically the old resource-starved version.\r\n\r\nIt's based around a Nintendo Wii remote.  These things are amazing devices for hardware hacking; the wiimote unit itself contains:\r\n* Several accessable button/switches\r\n* A speaker\r\n* 3-Axis Accelerometer\r\n* BLUETOOTH\r\n* A point-tracking infrared CAMERA.  Seriously!\r\n* Vibration buzzer\r\n* Expansion port... with Arduino/ATmega library!!\r\n\r\nYou can find Wiimotes on sale as low as $15; normally about $30.  There is no other way to get this kind of functionality attached to an ATMega/Arduino for twice the price.  Probably significantly more.\r\n\r\nWHAT YOU NEED:\r\nThis little project doesn't even use an ATMega or Arduino (yet) - all you need is a wiimote, some appropriate buttons, and a way to put/hold it all together.\r\n\r\nWHAT YOU GET:\r\nThe only software *I* am providing assumes you are running Linux, and will only work there.  But it would be trivial for anyone with knowledge of their operating system to modify for their purposes; the libraries it relies on are available on all platforms.  All you need to do is know how to hook into your OS's input queue so you can imitate a keyboard/mouse.\r\n\r\nWHAT IT CAN DO:\r\n* Use the buttons to emulate a keyboard, obviously.\r\n* Use the accelerometer to emulate a mouse.\r\n* All this over BLUETOOTH!\r\n\r\nWIP WHY:  \r\n* Just until I get some STLs that work for this design.  I have future designs already under way but they will be separate Thingiverse projects.\r\n* I'm not uploading the .scad files until I'm done, since Thingiverse refuses to render STLs anymore in a Thing once I've uploaded something it can't render.\r\n\r\nABOUT THE STL:\r\nThe STL published is a slightly fixed version of the one in the photos, which has too-thin walls and too little space between index finger and thumb buttons.\r\n\r\nWHERE THE SOFTWARE LIVES:\r\nhttps://github.com/ScribbleJ/WiimoteKeyer"
image = "https://cdn.thingiverse.com/renders/b0/52/ca/a4/2e/20110308_009_display_large_display_large.jpg"
license = "BSD-4-Clause "
licensor = "ScribbleJ"
name = "Wireless Chording Keyboard"
okhv = "OKH-LOSHv1.0"
part = []
repo = "https://www.thingiverse.com/thing:6922"
software = []
technology-readiness-level = "OTRL-4"
upload-method = "auto"
version = "1.0.0"

[__meta]
created-at = "2011-03-08T06:57:13+00:00"
last-visited = "2022-02-25T11:00:02.616920+00:00"
owner = "ScribbleJ"
repo = "https://www.thingiverse.com/thing:6922"
source = "thingiverse.com"

[specific-api-data]
