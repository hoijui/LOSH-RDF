@prefix : <https://www.thingiverse.com/thing%3A7101/1.0.0/> .
@prefix okh: <https://github.com/OPEN-NEXT/OKH-LOSH/raw/master/OKH-LOSH.ttl#> .
@prefix otrl: <http://purl.org/oseg/ontologies/OTRL#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .

:Project a okh:Module ;
    rdfs:label "DIY Rovio Northstar Truetrack Beacon" ;
    okh:dataSource "thingiverse.com" ;
    okh:documentationLanguage "en" ;
    okh:documentationReadinessLevel otrl:Odrl3 ;
    okh:function """My fellow Thingicans and Thingocrats; thanks to your help, this project is well under way!\r
\r
BACKGROUND (robot):\r
\r
The Wowwee Rovio ( http://www.wowwee.com/en/products/tech/telepresence/rovio/rovio ) is a IP-based Wifi Mobile Webcam, sometimes marketed as a simple telepresence robot.  At a price point of about $200, it's money well spent; the system is very well designed both in hardware and software, and you'd have a /very difficult/ time duplicating the ability of this robot for twice the price.\r
\r
The robot itself is rather hackable, with a well-documented and full-featured web API.  The source code to the mainboard was grudgingly released a while back, too, but I've not examined it and I'm told it's useless.\r
\r
BACKGROUND (tracking):\r
\r
The robot uses a system from Evolution Robotics called "Northstar" for indoor spatial positioning.  The system is very simple at it's most basic concept; the robot has a tiny pinhole camera mounted on it's top.  The camera looks at the ceiling for two infrared dots that are projected by a 'Truetrack Beacon.'  You could think of it as working very much like a Wiimote.\r
\r
Evolution Robotics makes sales-level information available here, for an overview of the system:  http://www.evolution.com/products/northstar/\r
\r
The system uses an 'encoding' to allow the Rovio to uniquely identify up to 10 different tracking beacons; the base station it comes with (beacon #0) and up to 9 additional beacon units, which WERE sold separately for a very short time (advertised here: http://www.wowwee.com/en/products/tech/telepresence/rovio/truetrack-room-beacon ).  The additional beacon units have a simple switch to select the ID.\r
\r
MOTIVATION:\r
\r
Sadly, the Rovio is a dead-end product; the manufacturer (Wowwee) never supported it very well and now has confirmed that they have stopped production and don't intend to ever bring it back.  \r
\r
New tracking beacons cannot be gotten for love or money, and despite the popularity of this product among hackers at one point, there is no data on the actual signaling protocol used by the Northstar system.\r
\r
Unfortunately, they won't talk to me, and they want /thousands/ for the development kits for the Northstar product, so following legitimate channels is out.  In addition, if they /were/ to fork over the details, I'd bet it would put my under an NDA that would prevent publication.\r
\r
As I don't have /ANY/ tracking beacons (except the one built into the base station), my Rovio is somewhat limited in it's automatic positioning abilities.\r
\r
WHAT WAS PREVIOUSLY KNOWN:\r
\r
All the gritty information on the Rovio seems to be concentrated on one site; robocommunity.com.  \r
\r
Here's a thread where some folks dissect the robot and tracking station:\r
http://www.robocommunity.com/forum/thread/14360/Inside-Rovio/\r
\r
The board we're interested in here is the round one, which is the Northstar beacon projector PCB.  There's a lot of great info on it specifically on this thread and the comments:\r
\r
http://www.robocommunity.com/article/15353/Inside-the-WowWee-Rovio-TrueTrack-Beacon/\r
\r
Unfortunately, no information on how it actually signals.\r
\r
WHAT I'VE LEARNED SO FAR:\r
\r
From looking at the photos in the above thread before I got my robot (I've only had it for one day!) I'd guessed that the signaling protocol was as simple as flashing the two IR lights at different rates.  That seems like the simple and obvious method to tell both one light in a beacon from the other, and to tell one set of lights for a beacon from the other.  \r
\r
So I opened up my beacon in the base station (instructions in the linked thread), and put a scope on the transistors that drive the LEDs.  From my photos, you will see my conjecture seemed to be correct; the LEDs were being blinked at very specific and different rates.\r
\r
Wiring up a quick circuit with an Arduino to blink a couple of LEDs at the same rate, I took the Rovio and exposed it to my LEDs.\r
\r
SURE ENOUGH, it immediately recognized it as Tracking Beacon #0, the home station.  SUCCESS!\r
\r
The MAJOR problem is - I only know the signaling speed to reproduce beacon #0, and you can't have two #0s in a network, so what I have so far is only good for people whos base station is destroyed.  With the signaling rates here, you can easily build a charging/dock/beacon0 unit from scratch.\r
\r
If you want the actual rates, they're in my o-scope photo(s).  :)\r
\r
UPDATE (2011-03-18):\r
\r
I built an automated scanner, which I'll leave to run all night, but it's already produced results!  I have a workable ID for NAV BEACON #1.  That's one down, 8 to go!  \r
\r
Even if I find them all, though, I could STILL use someone with a scope and real beacon to double-check my work...\r
\r
I'll be posting some pretty graphs and photos and probably the fuzzing circuit and software shortly.\r
\r
UPDATE: 2011-03-20\r
\r
I've been running my scanner for the last day and I'm posting some quick charts as well as the data I've gotten so far.  I'm not going to make any claims the data is good, but it has yielded some interesting points!\r
\r
I also uploaded the latest copies of the scanner software but I'm not sure I've made any noteworthy changes.\r
\r
UPDATE2: 2011-03-20\r
\r
I've built a simple tracking station and placed it in my home, and begun testing.  Two things I can report immediately:  \r
\r
1) Getting proper coverage from an LED is not easy, and I'll either have to use an array of LEDs, or a lens, or try the wide angle LEDs I have on order, or some combination of the above.\r
\r
2) The actual frequencies for room ID #1 reported by botman work better than my 1/3rd frequency in practice.\r
\r
UPDATES (2011-04-10):\r
This is mostly a summary of what's in the comments below.\r
\r
I've decided to move forward using stations based around a pair of transistors (I'll likely use some FETs since we're going to push > 100ma - maybe much > and also because they reduce component count) driving current into a pair of TSAL7200 LEDs (sourced here: http://www.rentron.com/remote_control/IRLED.htm) with the gates switched by a Atmega8, which can be programmed to a given station ID through SPI.\r
\r
I'll post the circuit the way I have it laid out so far; if anyone can come up with a good single-sided layout for printing and etching at home you'll be doing better than I am; I keep ending up with a few jumper wires required.  Keep in mind this circuit hasn't actually been built or tested as posted.\r
\r
Here's a quick reference of the known station ID frequencies:\r
\r
3030 and 2010 = Room 0\r
3150 and 2070 = Room 1\r
4170 and 3210 = Room 2\r
4290 and 3330 = Room 3\r
4410 and 3450 = Room 4\r
4530 and 3570 = Room 5\r
4650 and 3690 = Room 6\r
4770 and 3810 = Room 7\r
4890 and 3930 = Room 8\r
5010 and 4050 = Room 9""" ;
    okh:hasImage :Image ;
    okh:licensor "ScribbleJ" ;
    okh:repo <https://www.thingiverse.com/thing:7101> ;
    okh:repoHost "www.thingiverse.com" ;
    okh:spdxLicense <https://spdx.org/licenses/BSD-4-Clause> ;
    okh:technologyReadinessLevel otrl:Otrl4 ;
    okh:uploadMethod "auto" ;
    okh:version "1.0.0" ;
    okh:versionOf <https://www.thingiverse.com/thing:7101> .

:Image a okh:Image ;
    rdfs:label "Image of DIY Rovio Northstar Truetrack Beacon 1.0.0" ;
    okh:fileFormat "JPG" ;
    okh:fileUrl <https://cdn.thingiverse.com/renders/16/e0/23/25/b0/20110318_014_display_large_display_large.jpg> ;
    okh:permaURL <https://cdn.thingiverse.com/renders/16/e0/23/25/b0/20110318_014_display_large_display_large.jpg> .

