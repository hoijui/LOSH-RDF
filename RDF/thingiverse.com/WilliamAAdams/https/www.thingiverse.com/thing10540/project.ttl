@prefix : <https://www.thingiverse.com/thing%3A10540/1.0.0/> .
@prefix okh: <https://github.com/OPEN-NEXT/OKH-LOSH/raw/master/OKH-LOSH.ttl#> .
@prefix otrl: <http://purl.org/oseg/ontologies/OTRL#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .

:Project a okh:Module ;
    rdfs:label "Geodesic Maths for OpenScad - v0.1" ;
    okh:dataSource "thingiverse.com" ;
    okh:documentationLanguage "en" ;
    okh:documentationReadinessLevel otrl:Odrl3 ;
    okh:function """A funny thing happened on my recent holiday.  I built a nice 3V geodesic dome and covered it with a parachute, so me and the family could sleep mosquito free.  Of course I used the Desert Domes calculator: http://www.desertdomes.com/ in order to calculate my chord factors so I could cut my wood dowels.  But then I got to thinking...\r
\r
The geodesic form of tesselation is certainly good for dome building, but it's probably also good for other modeling purposes as well.\r
\r
This thing is a library of functions that will do geodesic calculations, written in OpenScad.\r
\r
There's no pretty object to go with it.  I'll have to use my handy dandy renderer and generate some domes.  For now, it's the the raw routines.\r
\r
First, there's some simple useful nuggets related to spherical coordinates:\r
sph(long, lat, radius)\r
sph_to_cart(s) - convert to cartesian\r
sph_from_cart(s) - create spherical from cartesian\r
sph_dist(c1, c2) - Calculate the chord distance of two points on a sphere\r
\r
that right there is enough to do some fun geometry and GIS sorts of stuff.  but wait, there's more!!\r
\r
Pulling this book off the shelf: Geodesic Math and How to Use It\r
\r
I went and created the following:\r
\r
geo_freq()\r
geo_tri2_tri3()\r
octa_class1()\r
octa_class2()\r
icosa_class1()\r
icosa_class2()\r
tetra_class1()\r
class1_icosa_chord_factor()\r
\r
These are the basics.  The last one is what you really actually use to figure out chord factors, then you use those factors, multiply for your radius, and you're done.  For those in the know of geodesics, it's relatively easy going from there.  If you're not so familiar, a much more handy geodesic() module will be forthcoming in a subsequent release.\r
\r
As usual, why bother with all this nonsense?  The web based calculator at Desert Domes is perfectly usable after all...  Well, that calculator generates domes based on the Icosahedron, Class 1, Method 1 style.  That's not the only form in which a dome can be constructed.  There are the octahedron, and tetrahedron base forms, and what about elliptical shapes, and who can forget triacons!!?\r
\r
At any rate, I figure if there's a ready made public domain library to start from, people can make more interesting dome construction models, so here it is!  I think it would be rather nifty if OpenScad had native support for geodesics...\r
\r
Future additions will include more interesting methods/classes and things such as elliptical and 'free form' sorts of things.  Then it will get really interesting.\r
\r
UPDATE: 08082011\r
Added a blog entry to go with this:\r
http://williamaadams.wordpress.com/2011/08/08/geodesic-math-in-openscad-part-1-of-some/\r
\r
UPDATE: 12082011\r
There is a bug in the 'clean()' function.  So, if you're using the sph_to_cart() function, you'll get invalid numbers when you rotate past 90 degrees for your longitude.  I'll update in a bit, but there's some other new functions coming as well.""" ;
    okh:hasImage :Image ;
    okh:licensor "WilliamAAdams" ;
    okh:repo <https://www.thingiverse.com/thing:10540> ;
    okh:repoHost "www.thingiverse.com" ;
    okh:spdxLicense <https://spdx.org/licenses/CC0-1.0> ;
    okh:technologyReadinessLevel otrl:Otrl4 ;
    okh:uploadMethod "auto" ;
    okh:version "1.0.0" ;
    okh:versionOf <https://www.thingiverse.com/thing:10540> .

:Image a okh:Image ;
    rdfs:label "Image of Geodesic Maths for OpenScad - v0.1 1.0.0" ;
    okh:fileFormat "JPG" ;
    okh:fileUrl <https://cdn.thingiverse.com/renders/12/b9/ed/f3/34/geodesicmaths_display_large_display_large.jpg> ;
    okh:permaURL <https://cdn.thingiverse.com/renders/12/b9/ed/f3/34/geodesicmaths_display_large_display_large.jpg> .

