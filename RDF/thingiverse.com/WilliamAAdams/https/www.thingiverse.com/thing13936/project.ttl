@prefix : <https://www.thingiverse.com/thing%3A13936/1.0.0/> .
@prefix okh: <https://github.com/OPEN-NEXT/OKH-LOSH/raw/master/OKH-LOSH.ttl#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .

:BanateCadSaddle a okh:Module ;
    rdfs:label "Banate CAD saddle" ;
    okh:dataSource "thingiverse.com" ;
    okh:documentationLanguage "en" ;
    okh:function """I need a funky saddle table.\r
\r
This thing is the first 'solid' generated from Banate CAD directly, without the help of any other tools.  I can at least open the .stl in GLCPlayer. \r
\r
At the moment, I don't export normals so if your viewer can't deal with that, it will fail.  Of course, things can only improve from here.\r
\r
I generated this using a Bezier surface description:\r
\r
local lshape3 = shape_bicubicsurface.new({\r
		M=cubic_bezier_M(),\r
		UMult=1,\r
		Mesh = mesh,\r
		Thickness = thickness,\r
		USteps = 16,\r
		WSteps = 16,\r
		})\r
addshape(lshape3)\r
\r
or more simply:\r
\r
bicubicsurface{Mesh = mesh, Thickness = -3}\r
\r
\r
You can specify whatever thickness you want for the sheet.  Using negative values will go 'in' from the normal vectors.\r
\r
Of course, while in the renderer, you can texture map the thing just so you see something interesting while you're messing with your geometry.\r
\r
UPDATE: Uploaded the .fab file""" ;
    okh:hasImage :Image ;
    okh:licensor "WilliamAAdams" ;
    okh:repo <https://www.thingiverse.com/thing:13936> ;
    okh:repoHost "www.thingiverse.com" ;
    okh:spdxLicense <https://spdx.org/licenses/CC-BY-4.0> ;
    okh:uploadMethod "auto" ;
    okh:version "1.0.0" ;
    okh:versionOf <https://www.thingiverse.com/thing:13936> .

:Image a okh:Image ;
    rdfs:label "Image of Banate CAD saddle 1.0.0" ;
    okh:fileFormat "JPG" ;
    okh:fileUrl <https://cdn.thingiverse.com/renders/91/e6/2a/01/07/bezier_table_display_large_display_large.jpg> ;
    okh:permaURL <https://cdn.thingiverse.com/renders/91/e6/2a/01/07/bezier_table_display_large_display_large.jpg> .

