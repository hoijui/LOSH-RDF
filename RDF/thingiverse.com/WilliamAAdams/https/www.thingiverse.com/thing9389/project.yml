__meta:
  branch: null
  created-at: '2011-06-17T09:27:54+00:00'
  history: null
  last-changed: null
  last-visited: '2022-02-25T11:00:02.616920+00:00'
  owner: WilliamAAdams
  path: null
  repo: https://www.thingiverse.com/thing:9389
  score: null
  source: thingiverse.com
attestation: null
bom: null
contribution-guide: null
cpc-patent-class: null
documentation-language: en
documentation-readiness-level: odrl3
function: "I was sitting around the kitchen table wondering how I could model a playground slide, or those water slide tubes.\r\n\r\nThis thing adds hermite curve/surface support to the OpenScad Surface Solids library.\r\n\r\nThe basic Hermite interpolation calculation has actually been lurking for a while, but now it's put to good usage.  With this, there is now a lerp (linear interpolation), berp (bezier interpolation), and herp (hermite interpolation) in the library.\r\n\r\nA Hermite curve is defined by two endpoints, and the tangent vectors to those points.  It is somewhat related to a Bezier curve.  In fact, I use the same Bernstein basis functions to express it.  Some people may find it easier to deal with, some harder, but it's just another tool in the box to help you create surfaces.\r\n\r\nIn this particular case, I've added a 'sweep_hermite()' module to the renderer.  This is really easy to work with.  You define one curve to be your 'profile', and you define another curve to be the path along which you'll sweep that profile.  The module will take care of creating the appropriate polyhedra to fill in the solid.  You can give a thickness, and it will extrude in that direction.  This is similar to the linear_extrude.\r\n\r\nThis also shows a general mechanism for doing sweeps with curves.  To make it fully generalized, and to reduce the amount of code needed to support different curves, I'll be further developing the matrix representation of curves.  That will essentially be the same as having function pointers for surface creation, if you catch my drift.\r\n\r\nI've added some visual debugging support.  If you decide to show the control frame, you'll get a nice rendering of the profile and sweeep curves, complete with their tangent vectors.\r\n\r\nUsing tangent vectors is interesting.  You need to be mindful that a vector has a length and direction.  The length influences the strength of pull in the particular direction.  It's best if you think of them centered at [0,0,0] and point them in the direction you want them to go.  You'll have to play around with setting them to get the gist of it.\r\n\r\nIt occurs to me that this might be a good tool to use while learning about different types of curves and surfaces.  Particularly with the visual debugging, and the added bonus that you get to print out a physical thing after you've done all your hard playing around.\r\n\r\nI made the license public domain, as this is well trod ground.\r\n\r\nAre Splines in the offing?\r\n\r\nAt any rate..."
image:
  created-at: '2011-06-17T09:27:54+00:00'
  last-changed: '2011-06-17T09:27:54+00:00'
  last-visited: '2022-02-25T17:44:27.013212+00:00'
  license: CC0-1.0
  licensor: WilliamAAdams
  mime-type: null
  name: Hermite_Sweep3_display_large_display_large
  path: https:/cdn.thingiverse.com/renders/d6/72/b8/a6/0b/Hermite_Sweep3_display_large_display_large.jpg
  perma-url: https://cdn.thingiverse.com/renders/d6/72/b8/a6/0b/Hermite_Sweep3_display_large_display_large.jpg
  url: https://cdn.thingiverse.com/renders/d6/72/b8/a6/0b/Hermite_Sweep3_display_large_display_large.jpg
license: CC0-1.0
licensor: WilliamAAdams
manufacturing-instructions: null
name: OpenScad Surface Solids 1.2
okhv: OKH-LOSHv1.0
organization: null
part: []
publication: null
readme: null
release: null
repo: https://www.thingiverse.com/thing:9389
software: []
specific-api-data: {}
standard-compliance: null
technology-readiness-level: ortl4
tsdc: null
upload-method: auto
user-manual: null
version: 1.0.0
