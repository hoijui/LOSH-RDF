documentation-language = "en"
documentation-readiness-level = "ODRL-3"
function = "Sometimes I find myself getting lost in the declarative transform world of OpenScad...\r\n\r\ntranslate()\r\n  rotate()\r\n    scale()\r\n      rotate()\r\n.\r\n.\r\n.\r\n\r\nThen I smacked my head and discovered 'multmatrix()'\r\n\r\nI know you, as I, have often wondered, 'what is the multmatrix?'\r\n\r\nThis thing is the answer.  Basically a bunch more matrix routines to make life in OpenScad easier.  Really I'm releasing this particular bit of work because I want to write an expose on declarative vs imperative programming and how to mix the two for 3D design goodness.\r\n\r\nWhat you'll find in this package are functions such as:\r\nvec4_mult_mat4(v,m)\r\nmat4_mult_mat4(m1,m2)\r\nmat4_transpose(m)\r\ntransform_scale(xyz)\r\netc.\r\n\r\nThe devotees of OpenScad might find the gem known as 'ccerp' and begin to wonder what kind of crack I've been smokin on this father's day.  But, that's for another post.\r\n\r\nThe bottom line with this is, you can do your own fancy matrix transforms, and apply them wherever and whenever you like using the 'multmatrix()' module.\r\n\r\nMost people will scratch their heads in wonderment.  Some might start bouncing down the halls with glee.  The rest will just click on the next Colbert mash up."
image = "https://cdn.thingiverse.com/renders/18/5f/75/b5/c2/test_matrices_display_large_display_large.jpg"
license = "CC0-1.0"
licensor = "WilliamAAdams"
name = "Some Matrix Maths for OpenScad"
okhv = "OKH-LOSHv1.0"
part = []
repo = "https://www.thingiverse.com/thing:9447"
software = []
technology-readiness-level = "OTRL-4"
upload-method = "auto"
version = "1.0.0"

[__meta]
created-at = "2011-06-19T11:19:04+00:00"
last-visited = "2022-02-25T11:00:02.616920+00:00"
owner = "WilliamAAdams"
repo = "https://www.thingiverse.com/thing:9447"
source = "thingiverse.com"

[specific-api-data]
