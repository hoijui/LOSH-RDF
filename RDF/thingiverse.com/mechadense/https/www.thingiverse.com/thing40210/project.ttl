@prefix : <https://www.thingiverse.com/thing%3A40210/1.0.0/> .
@prefix okh: <https://github.com/OPEN-NEXT/OKH-LOSH/raw/master/OKH-LOSH.ttl#> .
@prefix otrl: <http://purl.org/oseg/ontologies/OTRL#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .

:Project a okh:Module ;
    rdfs:label "miniSageCAD" ;
    okh:dataSource "thingiverse.com" ;
    okh:documentationLanguage "en" ;
    okh:documentationReadinessLevel otrl:Odrl3 ;
    okh:function """A tool for Constructive Solid Geometry like OpenSCAD but written in Sage http://www.sagemath.org/\r
\r
An **example output** ca be found here:  \r
https://www.thingiverse.com/thing:41272  \r
â€“ (a porous gyroid cylinder )  \r
\r
There is already quite some functionality in very little code.\r
\r
You can (via the Jmole 3D viewer in sage) preview & turn the 3d output before saving to *.stl file. With Sage you have a fully blown computer algebra system CAS at hand. Transfinite unbounded objects can be used for construction.\r
\r
\r
Sages implicit_plot3d is not made for this purpouse so I think this is more useful for experimentation with system design than useful construction work. But I might be wrong.\r
\r
In this context I like to mention \r
ImplicitCAD (written by Christopher Olah)\r
http://www.implicitcad.org/\r
https://github.com/colah/ImplicitCAD/blob/master/Graphics/Implicit/Primitives.hs\r
which Is ment to deliver good performance.\r
\r
I started to code miniSageCAD because while trying sage it became patently obvious to me how easy It'd be to get a minimal useful CSG system.\r
\r
I wanted to preserve symbolic derivability for all csg expressions (to have symbolic access to the surface normals). I found that only lambdas are symbolically derivable but those lambda expressions can not have line breaks. This makes it necessary to break more complex objects down into subfunctions. A good thing for documentation (names) but bad in that it clutteres the global namespace. Also obstucted by this is the idea to e.g. transport the positions of the edges of a cube up the csg graph accessible in e linearly-transformed way.\r
\r
 edit: \r
new in v0.04:\r
    corrected translate\r
    arbitrary arity union and intersection\r
    prism rod, prism\r
    inshell, onshell, outshell\r
    zfunction\r
    pieslicer\r
    difference2\r
    gyroid (left & right)""" ;
    okh:hasImage :Image ;
    okh:licensor "mechadense" ;
    okh:repo <https://www.thingiverse.com/thing:40210> ;
    okh:repoHost "www.thingiverse.com" ;
    okh:spdxLicense <https://spdx.org/licenses/CC-BY-4.0> ;
    okh:technologyReadinessLevel otrl:Otrl4 ;
    okh:uploadMethod "auto" ;
    okh:version "1.0.0" ;
    okh:versionOf <https://www.thingiverse.com/thing:40210> .

:Image a okh:Image ;
    rdfs:label "Image of miniSageCAD 1.0.0" ;
    okh:fileFormat "JPG" ;
    okh:fileUrl <https://cdn.thingiverse.com/site/img/default/Gears_display_large.jpg> ;
    okh:permaURL <https://cdn.thingiverse.com/site/img/default/Gears_display_large.jpg> .

