@prefix : <https://www.thingiverse.com/thing%3A9551/1.0.0/> .
@prefix okh: <https://github.com/OPEN-NEXT/OKH-LOSH/raw/master/OKH-LOSH.ttl#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .

:OpenscadFontImporter11 a okh:Module ;
    rdfs:label "OpenSCAD Font Importer 1.1" ;
    okh:dataSource "thingiverse.com" ;
    okh:documentationLanguage "en" ;
    okh:function """I needed to layout full strings for a project so I extended donb's wonderful DraFont library. This version will dump all ascii characters from a font by default, and provide a method for laying out strings.\r
\r
New in version 1.1: String spacing settings!\r
\r
For the brave, there is a git repo at github.com/pipakin/OpenSCAD-Font-Importer (This is not for the faint of heart, my python skills are substandard at best)\r
\r
NOTE: Complicated glyphs can take a long time to render, and I've managed to crash OpenSCAD a LOT by using long strings. For example, "FONTZ!" takes 1 minute 30 seconds to render, while "This is a test string." takes significantly longer (on the order of 13 minutes). So if you are going to use this for something, I recommend generating your string, rendering it, and then outputting an STL to use in your design with import_stl.""" ;
    okh:hasImage :Image ;
    okh:licensor "pipakin" ;
    okh:repo <https://www.thingiverse.com/thing:9551> ;
    okh:repoHost "www.thingiverse.com" ;
    okh:spdxLicense <https://spdx.org/licenses/CC-BY-SA-4.0> ;
    okh:uploadMethod "auto" ;
    okh:version "1.0.0" ;
    okh:versionOf <https://www.thingiverse.com/thing:9551> .

:Image a okh:Image ;
    rdfs:label "Image of OpenSCAD Font Importer 1.1 1.0.0" ;
    okh:fileFormat "JPG" ;
    okh:fileUrl <https://cdn.thingiverse.com/renders/e8/41/b3/e5/c2/fontz_display_large_display_large.jpg> ;
    okh:permaURL <https://cdn.thingiverse.com/renders/e8/41/b3/e5/c2/fontz_display_large_display_large.jpg> .

