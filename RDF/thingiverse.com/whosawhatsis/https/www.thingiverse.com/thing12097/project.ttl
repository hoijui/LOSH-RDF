@prefix : <https://www.thingiverse.com/thing%3A12097/1.0.0/> .
@prefix okh: <https://github.com/OPEN-NEXT/OKH-LOSH/raw/master/OKH-LOSH.ttl#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .

:PrintableD20 a okh:Module ;
    rdfs:label "Printable D20" ;
    okh:dataSource "thingiverse.com" ;
    okh:documentationLanguage "en" ;
    okh:function """This a regular icosahedron built in one line in OpenSCAD using no libraries, and only the value of phi as an input. I made it into a D20 by generating and placing the numbers on the surface, all in one additional line (with TBuser's bitmap font module as an input: http://www.thingiverse.com/thing:2054 ). I also included a version with all twenties to satisfy Makerblock's challenge ( http://www.makerbot.com/blog/2011/09/29/openscad-challenge-regular-icosahedron/#comment-15998 ) and take home the imaginary prize for the most efficient/elegant solution (I only took on the challenge because I wanted to see how short a script I could write to do it).\r
\r
I wanted to generate the numbers numerals myself, and I considered roman numerals, seven-segment numerals, and various binary encodings, but I ended up using the library because I realized that there just isn't (currently?) an elegant way to generate numbers in OpenSCAD (and I'll give my 9000 internet points to anyone who can convince me otherwise).\r
\r
Because the real point of this Thing in my mind is the conciseness of the code, here it is:\r
\r
\r
include ;\r
\r
phi = (1+ sqrt(5))/2;\r
\r
scale(20) translate([0, 0, cos(atan((phi - 1) / phi)) * phi]) rotate([0, atan((phi - 1) / phi * 2), 0]) difference() {\r
	intersection_for(a = [0:4]) rotate([0, 31.75, 72 * a]) intersection_for(r = [[0,0,0],[90,90,0],[90,0,90]]) rotate(r) linear_extrude(height = 10, center = true) polygon(points=[[phi,1],[phi,-1],[0,-phi],[-phi,-1],[-phi,1],[0,phi]], paths=[[0,1,2,3,4,5]]);\r
	for(n = [1:20]) rotate([180 * (ceil(n / 10) % 2), atan((phi - 1) / phi * 2) + atan((phi - 1) / phi) * 2 * (ceil((n - 5) / 10) % 2), 180 + 72 * n]) translate([0, 0, 1.5 - .1]) scale(0.008) for(d = [0, floor(log(n))]) translate([0, 35 * floor(log(n)) + d * -70, 0]) 8bit_char(str(floor(n % pow(10, d + 1) / pow(10, d))), 10, 100, false);\r
}""" ;
    okh:hasImage :Image ;
    okh:licensor "whosawhatsis" ;
    okh:repo <https://www.thingiverse.com/thing:12097> ;
    okh:repoHost "www.thingiverse.com" ;
    okh:spdxLicense <https://spdx.org/licenses/CC-BY-SA-4.0> ;
    okh:uploadMethod "auto" ;
    okh:version "1.0.0" ;
    okh:versionOf <https://www.thingiverse.com/thing:12097> .

:Image a okh:Image ;
    rdfs:label "Image of Printable D20 1.0.0" ;
    okh:fileFormat "JPG" ;
    okh:fileUrl <https://cdn.thingiverse.com/renders/e0/fa/2e/58/2c/IMG_0927_display_large_display_large.jpg> ;
    okh:permaURL <https://cdn.thingiverse.com/renders/e0/fa/2e/58/2c/IMG_0927_display_large_display_large.jpg> .

